.\" This document was created by modifying the template from the FreeBSD
.\" Documentation Project Handbook, Chapter 11, section 11.4.1.
.\"
.\" Credit is also given to the following links for their invaluable help in
.\" understanding the mdoc syntax:
.\" * http://manpages.bsd.lv/mdoc.html
.\" * https://www.mankier.com/7/mdoc
.\"
.\" The following tool was invaluable for syntax highlighting:
.\" * https://roperzh.github.io/grapse/
.Dd August 10, 2024
.Dt GFXUTIL 1
.Os
.Sh NAME
.Nm gfxutil
.Nd "Device Properties conversion tool"
.Sh SYNOPSIS
.Nm
.Oo
.Op Fl l
.Op Fl m
.Op Fl n
.Op Fl s
.Op Fl v
.Op Fl i Ar fmt
.Op Fl o Ar fmt
.Oc
.Oo
.Oo
.Fl a
|
.Fl c Op Ar efi_path
|
.Fl d Ar path Ar prop
|
.Fl f Ar name
|
.Fl h
|
.Fl p
|
.Fl t
.Oc
|
.Ar infile Ar outfile
|
.Ar efi_path
.Oc
.Sh DESCRIPTION
The
.Nm
command can be used for listing and finding PCI and APCI device paths in the
IODeviceTree plane; outputting an EFI device path from an
.Ql ioreg
path and property; converting an EFI device path to text or hex from binary,
nvram, hex, or text input; and converting a property list.
.Ss COMMAND FLAGS
The command flags are the first input(s) to the
.Nm
command:
.Bl -tag -width Ds
.It Fl l
Causes
.Nm
to output a shorter text representation of the display node, where applicable.
.It Fl m
Lets
.Nm
know that shorter text representations of the device node should not be used.
.It Fl n
Tells
.Nm
to automatically detect numeric format from binary data.
.It Fl s
Tells
.Nm
to automatically detect string format from binary data.
.It Fl v
Enables verbose mode.
.It Fl i Ar fmt
Specifies the
.Ar infile
type, one of:
.Bl -bullet -width Ds
.It
.Ql bin
.It
.Ql hex
.It
.Ql xml
.El
.Pp
The default is
.Ql hex .
.It Fl o Ar fmt
Specifies the
.Ar outfile
type, one of:
.Bl -bullet -width Ds
.It
.Ql bin
.It
.Ql hex
.It
.Ql xml
.El
.Pp
The default is
.Ql xml .
.El
.Ss COMMAND ACTIONS
The next input(s) to
.Nm
represent the command action:
.Bl -tag -width Ds
.It Fl a
Shows the
.Nm
version.
.It Xo
.Fl c Op Ar efi_path ,
.Ar efi_path
.Xc
Converts an EFI device path to text or hex.
.Pp
If
.Ar efi_path
is not specified,
.Nm
will take its input from
.Ql stdin
(needs to be piped in).
.Pp
The EFI path can be in the following formats:
.Bl -tag -width Ds
.It Binary
This format can only be used as an input and needs to be piped in from
.Ql stdin .
.It NVRAM
This format can only be used as an input.
The input comes from the
.Ql nvram
command and starts with a
.Ql % .
.It Hex
Hex digits with no spaces.
This format can be used for both input and output.
.It Text
A text representation of an EFI device path.
This format can be used for both input and output.
.El
.It Fl d Ar path Ar prop
Converts an
.Ql ioreg
path and property to an EFI device path.
.It Fl f Ar name
Finds device paths for devices matching
.Ar name
in the IODeviceTree plane.
.It Fl h
Prints a summary of
.Nm
flags and commands.
.It Fl p
Lists all device paths for PCI devices in the IODeviceTree plane.
.It Fl t
Lists all device paths for PCI and ACPI devices in the IODeviceTree plane in
tree order.
.It Ar infile Ar outfile
Converts a property list,
.Ar infile ,
to
.Ar outfile
using the formats specified in the
.Fl i Ar fmt
and
.Fl o Ar fmt
flags.
.El
.Sh EXAMPLES
A handful of
.Nm
functionalities are demonstrated below.
.Pp
Listing the device paths for all PCI devices in the IODeviceTree plane:
.Pp
.Dl % gfxutil
.Pp
Getting a summary of the tool's actions:
.Pp
.Dl % gfxutil -h
.Pp
Find the device path for the
.Ql HDEF
device:
.Pp
.Dl % gfxutil -f HDEF
.Pp
Get the EFI device path for the boot device:
.Pp
.Dl % gfxutil -d IODeviceTree:/chosen boot-device-path
.Sh SEE ALSO
.Xr ioreg 1 ,
.Xr nvram 1
